#如有需要 gzip也放开即可
#gzip  on;

#上传文件大小限制
client_max_body_size 1024M;


##3.1upstream负载均衡(第3.2步中反向代理需要用到该配置)
upstream upstream_server{
      ##java服务
      server 192.168.253.2:8889;
}

ignore_invalid_headers on;
underscores_in_headers on;
merge_slashes on;


##1.https跳转配置

server {
    ## 监听80和443端口
    listen      80;
    listen 443 ssl;
    ##服务地址域名
    server_name  www.test.com;
    ##如果不是https 则做跳转
      if ($scheme != https) {
            rewrite ^(.*)$  https://$host$1 permanent; 
            #return 301    https://$host$request_uri;
      }


    ##2.让浏览器自动升级请求为https
    ##这一句可以让浏览器加载http的资源。但是有的浏览器不支持，比如IE
    add_header 'Content-Security-Policy' 'upgrade-insecure-requests';
    

   ##3.2反向代理到服务地址
   location / {
          root   html;
            index  index.html index.htm;
            #反向代理
            proxy_pass http://upstream_server; 
            proxy_set_header Host $host;
            proxy_set_header Connection close;
            proxy_connect_timeout 100ms; # 代理机器连接超时时长(默认的60s太长了)
            expires 30d; 
    }


    #4.ssl证书配置
    ssl_certificate      /etc/nginx/ssl/custom.pem;
    ssl_certificate_key  /etc/nginx/ssl/custom.key;
    # SSL(包括 v3)都有漏洞，应该用 TLS(TLS1.0 = SSL 3.1)
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; 
    ssl_ciphers   HIGH:!aNULL:!MD5;

}